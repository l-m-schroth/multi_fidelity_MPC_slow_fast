{
    "acados_include_path": "/home/lukas/ETH_Zuerich/ASL_Stanford_Masterthesis/Workspace/acados/include",
    "acados_lib_path": "/home/lukas/ETH_Zuerich/ASL_Stanford_Masterthesis/Workspace/acados/lib",
    "code_export_directory": "/home/lukas/ETH_Zuerich/ASL_Stanford_Masterthesis/Workspace/multi_fidelity_MPC_fast_slow/drone/c_generated_code",
    "constraints": {
        "C": [],
        "C_e": [],
        "D": [],
        "constr_type": "BGH",
        "constr_type_0": "BGH",
        "constr_type_e": "BGH",
        "has_x0": true,
        "idxbu": [
            0,
            1
        ],
        "idxbx": [
            2,
            10,
            11
        ],
        "idxbx_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
        ],
        "idxbx_e": [],
        "idxbxe_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
        ],
        "idxsbu": [],
        "idxsbx": [],
        "idxsbx_e": [],
        "idxsg": [],
        "idxsg_e": [],
        "idxsh": [],
        "idxsh_0": [],
        "idxsh_e": [],
        "idxsphi": [],
        "idxsphi_0": [],
        "idxsphi_e": [],
        "lbu": [
            -10,
            -10
        ],
        "lbx": [
            -10,
            -20,
            -20
        ],
        "lbx_0": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "lbx_e": [],
        "lg": [],
        "lg_e": [],
        "lh": [],
        "lh_0": [],
        "lh_e": [],
        "lphi": [],
        "lphi_0": [],
        "lphi_e": [],
        "lsbu": [],
        "lsbx": [],
        "lsbx_e": [],
        "lsg": [],
        "lsg_e": [],
        "lsh": [],
        "lsh_0": [],
        "lsh_e": [],
        "lsphi": [],
        "lsphi_0": [],
        "lsphi_e": [],
        "ubu": [
            10,
            10
        ],
        "ubx": [
            10,
            20,
            20
        ],
        "ubx_0": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "ubx_e": [],
        "ug": [],
        "ug_e": [],
        "uh": [],
        "uh_0": [],
        "uh_e": [],
        "uphi": [],
        "uphi_0": [],
        "uphi_e": [],
        "usbu": [],
        "usbx": [],
        "usbx_e": [],
        "usg": [],
        "usg_e": [],
        "ush": [],
        "ush_0": [],
        "ush_e": [],
        "usphi": [],
        "usphi_0": [],
        "usphi_e": []
    },
    "cost": {
        "Vu": [],
        "Vu_0": [],
        "Vx": [],
        "Vx_0": [],
        "Vx_e": [],
        "Vz": [],
        "Vz_0": [],
        "W": [
            [
                10.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                10.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0001,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0001
            ]
        ],
        "W_0": [
            [
                10.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                10.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0001,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0001
            ]
        ],
        "W_e": [
            [
                10.0,
                0.0
            ],
            [
                0.0,
                10.0
            ]
        ],
        "Zl": [],
        "Zl_0": [],
        "Zl_e": [],
        "Zu": [],
        "Zu_0": [],
        "Zu_e": [],
        "cost_ext_fun_type": "casadi",
        "cost_ext_fun_type_0": "casadi",
        "cost_ext_fun_type_e": "casadi",
        "cost_function_ext_cost": null,
        "cost_function_ext_cost_0": null,
        "cost_function_ext_cost_e": null,
        "cost_source_ext_cost": null,
        "cost_source_ext_cost_0": null,
        "cost_source_ext_cost_e": null,
        "cost_type": "NONLINEAR_LS",
        "cost_type_0": "NONLINEAR_LS",
        "cost_type_e": "NONLINEAR_LS",
        "yref": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "yref_0": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "yref_e": [
            0.0,
            0.0
        ],
        "zl": [],
        "zl_0": [],
        "zl_e": [],
        "zu": [],
        "zu_0": [],
        "zu_e": []
    },
    "cython_include_dirs": [
        "/home/lukas/ETH_Zuerich/ASL_Stanford_Masterthesis/venv/lib/python3.10/site-packages/numpy/core/include",
        "/usr/include/python3.10"
    ],
    "dims": {
        "N": 100,
        "n_global_data": 0,
        "nbu": 2,
        "nbx": 3,
        "nbx_0": 12,
        "nbx_e": 0,
        "nbxe_0": 12,
        "ng": 0,
        "ng_e": 0,
        "nh": 0,
        "nh_0": 0,
        "nh_e": 0,
        "np": 0,
        "np_global": 0,
        "nphi": 0,
        "nphi_0": 0,
        "nphi_e": 0,
        "nr": 0,
        "nr_0": 0,
        "nr_e": 0,
        "ns": 0,
        "ns_0": 0,
        "ns_e": 0,
        "nsbu": 0,
        "nsbx": 0,
        "nsbx_e": 0,
        "nsg": 0,
        "nsg_e": 0,
        "nsh": 0,
        "nsh_0": 0,
        "nsh_e": 0,
        "nsphi": 0,
        "nsphi_0": 0,
        "nsphi_e": 0,
        "nu": 2,
        "nx": 12,
        "nx_next": 12,
        "ny": 6,
        "ny_0": 6,
        "ny_e": 2,
        "nz": 0
    },
    "external_function_files_model": [
        "drone_full_1742873042512_model/drone_full_1742873042512_impl_dae_fun.c",
        "drone_full_1742873042512_model/drone_full_1742873042512_impl_dae_fun_jac_x_xdot_z.c",
        "drone_full_1742873042512_model/drone_full_1742873042512_impl_dae_fun_jac_x_xdot_u_z.c",
        "drone_full_1742873042512_model/drone_full_1742873042512_impl_dae_fun_jac_x_xdot_u.c",
        "drone_full_1742873042512_model/drone_full_1742873042512_impl_dae_jac_x_xdot_u_z.c"
    ],
    "external_function_files_ocp": [
        "drone_full_1742873042512_cost/drone_full_1742873042512_cost_y_0_fun.c",
        "drone_full_1742873042512_cost/drone_full_1742873042512_cost_y_0_fun_jac_ut_xt.c",
        "drone_full_1742873042512_cost/drone_full_1742873042512_cost_y_0_hess.c",
        "drone_full_1742873042512_cost/drone_full_1742873042512_cost_y_fun.c",
        "drone_full_1742873042512_cost/drone_full_1742873042512_cost_y_fun_jac_ut_xt.c",
        "drone_full_1742873042512_cost/drone_full_1742873042512_cost_y_hess.c",
        "drone_full_1742873042512_cost/drone_full_1742873042512_cost_y_e_fun.c",
        "drone_full_1742873042512_cost/drone_full_1742873042512_cost_y_e_fun_jac_ut_xt.c",
        "drone_full_1742873042512_cost/drone_full_1742873042512_cost_y_e_hess.c"
    ],
    "json_file": "acados_ocp_drone_100_1742873042512.json",
    "model": {
        "con_h_expr": null,
        "con_h_expr_0": null,
        "con_h_expr_e": null,
        "con_phi_expr": null,
        "con_phi_expr_0": null,
        "con_phi_expr_e": null,
        "con_r_expr": null,
        "con_r_expr_0": null,
        "con_r_expr_e": null,
        "con_r_in_phi": null,
        "con_r_in_phi_0": null,
        "con_r_in_phi_e": null,
        "cost_conl_custom_outer_hess": null,
        "cost_conl_custom_outer_hess_0": null,
        "cost_conl_custom_outer_hess_e": null,
        "cost_expr_ext_cost": null,
        "cost_expr_ext_cost_0": null,
        "cost_expr_ext_cost_custom_hess": null,
        "cost_expr_ext_cost_custom_hess_0": null,
        "cost_expr_ext_cost_custom_hess_e": null,
        "cost_expr_ext_cost_e": null,
        "cost_psi_expr": null,
        "cost_psi_expr_0": null,
        "cost_psi_expr_e": null,
        "cost_r_in_psi_expr": null,
        "cost_r_in_psi_expr_0": null,
        "cost_r_in_psi_expr_e": null,
        "cost_y_expr": "@1=x[3], @2=sign(x[3]), @3=0.2, @4=0.1, @5=(@4*x[10]), @6=(x[2]-x[4]), @7=sin(@6), @8=0.4, @9=(@8*x[8]), @10=x[9], @11=0.1, @12=(@11*x[11]), @13=(x[2]-x[4]), @14=sin(@13), @15=(@3*(1e-06+(@2*fabs(@1)))), @16=((((@5*@7)-(@9*@10))+(@12*@14))/@15), @17=x[4], @18=cos(@17), @19=x[3], @20=(((zeros(12x1)[4] += (@18*@19))[3] += sin(@17))[0] += 1), @21=((dense((((zeros(12x1,3nz)[0] = @20[0])[1] = @20[3])[2] = @20[4]))[11] = 0)[10] = 0), @22=@21[9], @23=(@22/@15), @24=(cos(@13)*(@12*@23)), @25=(cos(@6)*(@5*@23)), @26=(@21[9] = 0), @27=@26[8], @28=(x[2]-x[4]), @29=x[11], @30=(0.5*@27), @31=(sin(@28)*(@29*@30)), @32=cos(@28), @33=(x[2]-x[4]), @34=x[10], @35=(0.5*@27), @36=(sin(@33)*(@34*@35)), @37=cos(@33), @38=x[9], @39=x[3], @40=sq(@38), @41=0.2, @42=(@26[8] = 0), @43=(@41*(20*@42[7])), @44=x[4], @45=x[3], @46=(@42[7] = 0), @47=(0.5*@46[6]), @48=cos(@44), @49=x[4], @50=0.3, @51=x[2], @52=x[11], @53=cos(@51), @54=x[2], @55=x[10], @56=cos(@54), @57=x[4], @58=x[3], @59=(@46[6] = 0), @60=(0.5*@59[5]), @61=sin(@57), @62=x[4], @63=0.3, @64=x[2], @65=x[11], @66=sin(@64), @67=x[2], @68=x[10], @69=sin(@67), @70=(@59[5] = 0), @71=(@70[4] = 0), @72=(@71[3] = 0), @73=(@72[2] = 0), @74=((((((((((((zeros(12x1)[0] = x[5])[1] = x[6])[2] = x[7])[3] = x[8])[4] = x[9])[5] = (((((-(@68*@69))-(@65*@66))-(@63*sin(@62)))+(@58*@61))/2))[6] = (((((-19.62+(@55*@56))+(@52*@53))+(@50*cos(@49)))-(@45*@48))/2))[7] = ((@41*(x[11]-x[10]))/0.05))[8] = ((0.15+((((3-(x[3]/0.1))+(@39*@40))+((@34*@37)/2))+((@29*@32)/2)))-(x[3]/2)))[9] = @16)[10] = u[0])[11] = u[1]), @75=(@74[4] = 0), @76=(((zeros(12x1)[4] += @74[4])[3] += @75[3])[0] += (@75[3] = 0)[0]), @77=@76[4], @78=((((((((((((((((((((((((((((((((((((((((((zeros(12x1)[3] += (-(sign(@1)*(@2*(@3*((@16/@15)*@22))))))[4] += (-@24))[2] += @24)[11] += (@11*(@14*@23)))[9] += (-(@9*@23)))[8] += (-(@8*(@10*@23))))[4] += (-@25))[2] += @25)[10] += (@4*(@7*@23)))[3] += (-(0.5*@27)))[4] += @31)[2] += (-@31))[11] += (@32*@30))[4] += @36)[2] += (-@36))[10] += (@37*@35))[9] += ((2.*@38)*(@39*@27)))[3] += (@40*@27))[3] += (-(10*@27)))[10] += (-@43))[11] += @43)[4] += (sin(@44)*(@45*@47)))[3] += (-(@48*@47)))[4] += (-(sin(@49)*(@50*@47))))[2] += (-(sin(@51)*(@52*@47))))[11] += (@53*@47))[2] += (-(sin(@54)*(@55*@47))))[10] += (@56*@47))[4] += (cos(@57)*(@58*@60)))[3] += (@61*@60))[4] += (-(cos(@62)*(@63*@60))))[2] += (-(cos(@64)*(@65*@60))))[11] += (-(@66*@60)))[2] += (-(cos(@67)*(@68*@60))))[10] += (-(@69*@60)))[9] += @70[4])[8] += @71[3])[7] += @72[2])[6] += @73[1])[5] += (@73[1] = 0)[0])[3] += (@18*@77))[4] += ((cos(@17)*@76[3])-(sin(@17)*(@19*@77)))), @79=sin(@17), @80=(((zeros(12x1)[4] += (@79*@19))[3] += (-cos(@17)))[1] += 1), @81=((dense((((zeros(12x1,3nz)[0] = @80[1])[1] = @80[3])[2] = @80[4]))[11] = 0)[10] = 0), @82=@81[9], @83=(@82/@15), @84=(cos(@13)*(@12*@83)), @85=(cos(@6)*(@5*@83)), @86=(@81[9] = 0), @87=@86[8], @88=(0.5*@87), @89=(sin(@28)*(@29*@88)), @90=(0.5*@87), @91=(sin(@33)*(@34*@90)), @92=(@86[8] = 0), @93=(@41*(20*@92[7])), @94=(@92[7] = 0), @95=(0.5*@94[6]), @96=(@94[6] = 0), @97=(0.5*@96[5]), @98=(@96[5] = 0), @99=(@98[4] = 0), @100=(@99[3] = 0), @101=(@100[2] = 0), @102=(@74[4] = 0), @103=(((zeros(12x1)[4] += @74[4])[3] += @102[3])[1] += (@102[3] = 0)[1]), @104=@103[4], @105=((((((((((((((((((((((((((((((((((((((((((zeros(12x1)[3] += (-(sign(@1)*(@2*(@3*((@16/@15)*@82))))))[4] += (-@84))[2] += @84)[11] += (@11*(@14*@83)))[9] += (-(@9*@83)))[8] += (-(@8*(@10*@83))))[4] += (-@85))[2] += @85)[10] += (@4*(@7*@83)))[3] += (-(0.5*@87)))[4] += @89)[2] += (-@89))[11] += (@32*@88))[4] += @91)[2] += (-@91))[10] += (@37*@90))[9] += ((2.*@38)*(@39*@87)))[3] += (@40*@87))[3] += (-(10*@87)))[10] += (-@93))[11] += @93)[4] += (sin(@44)*(@45*@95)))[3] += (-(@48*@95)))[4] += (-(sin(@49)*(@50*@95))))[2] += (-(sin(@51)*(@52*@95))))[11] += (@53*@95))[2] += (-(sin(@54)*(@55*@95))))[10] += (@56*@95))[4] += (cos(@57)*(@58*@97)))[3] += (@61*@97))[4] += (-(cos(@62)*(@63*@97))))[2] += (-(cos(@64)*(@65*@97))))[11] += (-(@66*@97)))[2] += (-(cos(@67)*(@68*@97))))[10] += (-(@69*@97)))[9] += @98[4])[8] += @99[3])[7] += @100[2])[6] += @101[1])[5] += (@101[1] = 0)[0])[3] += (@79*@104))[4] += ((sin(@17)*@103[3])+(cos(@17)*(@19*@104)))), vertcat(x[0], x[1], mac((((((zeros(12x1,5nz)[0] = @78[3])[1] = @78[4])[2] = @78[5])[3] = @78[8])[4] = @78[9])',@74,0), mac((((((zeros(12x1,5nz)[0] = @105[3])[1] = @105[4])[2] = @105[6])[3] = @105[8])[4] = @105[9])',@74,0), u[0], u[1])",
        "cost_y_expr_0": "@1=x[3], @2=sign(x[3]), @3=0.2, @4=0.1, @5=(@4*x[10]), @6=(x[2]-x[4]), @7=sin(@6), @8=0.4, @9=(@8*x[8]), @10=x[9], @11=0.1, @12=(@11*x[11]), @13=(x[2]-x[4]), @14=sin(@13), @15=(@3*(1e-06+(@2*fabs(@1)))), @16=((((@5*@7)-(@9*@10))+(@12*@14))/@15), @17=x[4], @18=cos(@17), @19=x[3], @20=(((zeros(12x1)[4] += (@18*@19))[3] += sin(@17))[0] += 1), @21=((dense((((zeros(12x1,3nz)[0] = @20[0])[1] = @20[3])[2] = @20[4]))[11] = 0)[10] = 0), @22=@21[9], @23=(@22/@15), @24=(cos(@13)*(@12*@23)), @25=(cos(@6)*(@5*@23)), @26=(@21[9] = 0), @27=@26[8], @28=(x[2]-x[4]), @29=x[11], @30=(0.5*@27), @31=(sin(@28)*(@29*@30)), @32=cos(@28), @33=(x[2]-x[4]), @34=x[10], @35=(0.5*@27), @36=(sin(@33)*(@34*@35)), @37=cos(@33), @38=x[9], @39=x[3], @40=sq(@38), @41=0.2, @42=(@26[8] = 0), @43=(@41*(20*@42[7])), @44=x[4], @45=x[3], @46=(@42[7] = 0), @47=(0.5*@46[6]), @48=cos(@44), @49=x[4], @50=0.3, @51=x[2], @52=x[11], @53=cos(@51), @54=x[2], @55=x[10], @56=cos(@54), @57=x[4], @58=x[3], @59=(@46[6] = 0), @60=(0.5*@59[5]), @61=sin(@57), @62=x[4], @63=0.3, @64=x[2], @65=x[11], @66=sin(@64), @67=x[2], @68=x[10], @69=sin(@67), @70=(@59[5] = 0), @71=(@70[4] = 0), @72=(@71[3] = 0), @73=(@72[2] = 0), @74=((((((((((((zeros(12x1)[0] = x[5])[1] = x[6])[2] = x[7])[3] = x[8])[4] = x[9])[5] = (((((-(@68*@69))-(@65*@66))-(@63*sin(@62)))+(@58*@61))/2))[6] = (((((-19.62+(@55*@56))+(@52*@53))+(@50*cos(@49)))-(@45*@48))/2))[7] = ((@41*(x[11]-x[10]))/0.05))[8] = ((0.15+((((3-(x[3]/0.1))+(@39*@40))+((@34*@37)/2))+((@29*@32)/2)))-(x[3]/2)))[9] = @16)[10] = u[0])[11] = u[1]), @75=(@74[4] = 0), @76=(((zeros(12x1)[4] += @74[4])[3] += @75[3])[0] += (@75[3] = 0)[0]), @77=@76[4], @78=((((((((((((((((((((((((((((((((((((((((((zeros(12x1)[3] += (-(sign(@1)*(@2*(@3*((@16/@15)*@22))))))[4] += (-@24))[2] += @24)[11] += (@11*(@14*@23)))[9] += (-(@9*@23)))[8] += (-(@8*(@10*@23))))[4] += (-@25))[2] += @25)[10] += (@4*(@7*@23)))[3] += (-(0.5*@27)))[4] += @31)[2] += (-@31))[11] += (@32*@30))[4] += @36)[2] += (-@36))[10] += (@37*@35))[9] += ((2.*@38)*(@39*@27)))[3] += (@40*@27))[3] += (-(10*@27)))[10] += (-@43))[11] += @43)[4] += (sin(@44)*(@45*@47)))[3] += (-(@48*@47)))[4] += (-(sin(@49)*(@50*@47))))[2] += (-(sin(@51)*(@52*@47))))[11] += (@53*@47))[2] += (-(sin(@54)*(@55*@47))))[10] += (@56*@47))[4] += (cos(@57)*(@58*@60)))[3] += (@61*@60))[4] += (-(cos(@62)*(@63*@60))))[2] += (-(cos(@64)*(@65*@60))))[11] += (-(@66*@60)))[2] += (-(cos(@67)*(@68*@60))))[10] += (-(@69*@60)))[9] += @70[4])[8] += @71[3])[7] += @72[2])[6] += @73[1])[5] += (@73[1] = 0)[0])[3] += (@18*@77))[4] += ((cos(@17)*@76[3])-(sin(@17)*(@19*@77)))), @79=sin(@17), @80=(((zeros(12x1)[4] += (@79*@19))[3] += (-cos(@17)))[1] += 1), @81=((dense((((zeros(12x1,3nz)[0] = @80[1])[1] = @80[3])[2] = @80[4]))[11] = 0)[10] = 0), @82=@81[9], @83=(@82/@15), @84=(cos(@13)*(@12*@83)), @85=(cos(@6)*(@5*@83)), @86=(@81[9] = 0), @87=@86[8], @88=(0.5*@87), @89=(sin(@28)*(@29*@88)), @90=(0.5*@87), @91=(sin(@33)*(@34*@90)), @92=(@86[8] = 0), @93=(@41*(20*@92[7])), @94=(@92[7] = 0), @95=(0.5*@94[6]), @96=(@94[6] = 0), @97=(0.5*@96[5]), @98=(@96[5] = 0), @99=(@98[4] = 0), @100=(@99[3] = 0), @101=(@100[2] = 0), @102=(@74[4] = 0), @103=(((zeros(12x1)[4] += @74[4])[3] += @102[3])[1] += (@102[3] = 0)[1]), @104=@103[4], @105=((((((((((((((((((((((((((((((((((((((((((zeros(12x1)[3] += (-(sign(@1)*(@2*(@3*((@16/@15)*@82))))))[4] += (-@84))[2] += @84)[11] += (@11*(@14*@83)))[9] += (-(@9*@83)))[8] += (-(@8*(@10*@83))))[4] += (-@85))[2] += @85)[10] += (@4*(@7*@83)))[3] += (-(0.5*@87)))[4] += @89)[2] += (-@89))[11] += (@32*@88))[4] += @91)[2] += (-@91))[10] += (@37*@90))[9] += ((2.*@38)*(@39*@87)))[3] += (@40*@87))[3] += (-(10*@87)))[10] += (-@93))[11] += @93)[4] += (sin(@44)*(@45*@95)))[3] += (-(@48*@95)))[4] += (-(sin(@49)*(@50*@95))))[2] += (-(sin(@51)*(@52*@95))))[11] += (@53*@95))[2] += (-(sin(@54)*(@55*@95))))[10] += (@56*@95))[4] += (cos(@57)*(@58*@97)))[3] += (@61*@97))[4] += (-(cos(@62)*(@63*@97))))[2] += (-(cos(@64)*(@65*@97))))[11] += (-(@66*@97)))[2] += (-(cos(@67)*(@68*@97))))[10] += (-(@69*@97)))[9] += @98[4])[8] += @99[3])[7] += @100[2])[6] += @101[1])[5] += (@101[1] = 0)[0])[3] += (@79*@104))[4] += ((sin(@17)*@103[3])+(cos(@17)*(@19*@104)))), vertcat(x[0], x[1], mac((((((zeros(12x1,5nz)[0] = @78[3])[1] = @78[4])[2] = @78[5])[3] = @78[8])[4] = @78[9])',@74,0), mac((((((zeros(12x1,5nz)[0] = @105[3])[1] = @105[4])[2] = @105[6])[3] = @105[8])[4] = @105[9])',@74,0), u[0], u[1])",
        "cost_y_expr_e": "vertcat(x[0], x[1])",
        "disc_dyn_expr": null,
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "dyn_impl_dae_fun": null,
        "dyn_impl_dae_fun_jac": null,
        "dyn_impl_dae_jac": null,
        "f_expl_expr": "((((((((((((zeros(12x1)[0] = x[5])[1] = x[6])[2] = x[7])[3] = x[8])[4] = x[9])[5] = (((((-(x[10]*sin(x[2])))-(x[11]*sin(x[2])))-(0.3*sin(x[4])))+(x[3]*sin(x[4])))/2))[6] = (((((-19.62+(x[10]*cos(x[2])))+(x[11]*cos(x[2])))+(0.3*cos(x[4])))-(x[3]*cos(x[4])))/2))[7] = ((0.2*(x[11]-x[10]))/0.05))[8] = ((0.15+((((3-(x[3]/0.1))+(x[3]*sq(x[9])))+((x[10]*cos((x[2]-x[4])))/2))+((x[11]*cos((x[2]-x[4])))/2)))-(x[3]/2)))[9] = (((((0.1*x[10])*sin((x[2]-x[4])))-((0.4*x[8])*x[9]))+((0.1*x[11])*sin((x[2]-x[4]))))/(0.2*(1e-06+(sign(x[3])*fabs(x[3]))))))[10] = u[0])[11] = u[1])",
        "f_impl_expr": "(xdot-((((((((((((zeros(12x1)[0] = x[5])[1] = x[6])[2] = x[7])[3] = x[8])[4] = x[9])[5] = (((((-(x[10]*sin(x[2])))-(x[11]*sin(x[2])))-(0.3*sin(x[4])))+(x[3]*sin(x[4])))/2))[6] = (((((-19.62+(x[10]*cos(x[2])))+(x[11]*cos(x[2])))+(0.3*cos(x[4])))-(x[3]*cos(x[4])))/2))[7] = ((0.2*(x[11]-x[10]))/0.05))[8] = ((0.15+((((3-(x[3]/0.1))+(x[3]*sq(x[9])))+((x[10]*cos((x[2]-x[4])))/2))+((x[11]*cos((x[2]-x[4])))/2)))-(x[3]/2)))[9] = (((((0.1*x[10])*sin((x[2]-x[4])))-((0.4*x[8])*x[9]))+((0.1*x[11])*sin((x[2]-x[4]))))/(0.2*(1e-06+(sign(x[3])*fabs(x[3]))))))[10] = u[0])[11] = u[1]))",
        "gnsf_nontrivial_f_LO": 1,
        "gnsf_purely_linear": 0,
        "name": "drone_full_1742873042512",
        "nu_original": null,
        "p": "0x0",
        "p_global": null,
        "t": [],
        "t0": null,
        "t_label": "t",
        "u": "u",
        "u_labels": null,
        "x": "x",
        "x_labels": null,
        "xdot": "xdot",
        "z": "0x0"
    },
    "name": "drone_full_1742873042512",
    "p_global_values": [],
    "parameter_values": [],
    "problem_class": "OCP",
    "shared_lib_ext": ".so",
    "simulink_opts": null,
    "solver_options": {
        "N_horizon": 100,
        "Tsim": 0.0010000000000000007,
        "adaptive_levenberg_marquardt_lam": 5.0,
        "adaptive_levenberg_marquardt_mu0": 0.001,
        "adaptive_levenberg_marquardt_mu_min": 1e-16,
        "as_rti_iter": 1,
        "as_rti_level": 4,
        "collocation_type": "GAUSS_LEGENDRE",
        "cost_discretization": "EULER",
        "cost_scaling": [
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            1.0
        ],
        "custom_templates": [],
        "custom_update_copy": true,
        "custom_update_filename": "",
        "custom_update_header_filename": "",
        "eval_residual_at_max_iter": false,
        "exact_hess_constr": 1,
        "exact_hess_cost": 1,
        "exact_hess_dyn": 1,
        "ext_cost_num_hess": 0,
        "ext_fun_compile_flags": "-O2",
        "fixed_hess": 0,
        "globalization": "FIXED_STEP",
        "globalization_alpha_min": 0.05,
        "globalization_alpha_reduction": 0.7,
        "globalization_eps_sufficient_descent": 0.0001,
        "globalization_fixed_step_length": 1.0,
        "globalization_full_step_dual": 0,
        "globalization_funnel_fraction_switching_condition": 0.001,
        "globalization_funnel_init_increase_factor": 15.0,
        "globalization_funnel_init_upper_bound": 1.0,
        "globalization_funnel_initial_penalty_parameter": 1.0,
        "globalization_funnel_kappa": 0.9,
        "globalization_funnel_sufficient_decrease_factor": 0.9,
        "globalization_line_search_use_sufficient_descent": 0,
        "globalization_use_SOC": 0,
        "hessian_approx": "GAUSS_NEWTON",
        "hpipm_mode": "BALANCE",
        "integrator_type": "IRK",
        "levenberg_marquardt": 0.0,
        "log_primal_step_norm": false,
        "model_external_shared_lib_dir": null,
        "model_external_shared_lib_name": null,
        "nlp_solver_ext_qp_res": 0,
        "nlp_solver_max_iter": 200,
        "nlp_solver_tol_comp": 1e-06,
        "nlp_solver_tol_eq": 1e-06,
        "nlp_solver_tol_ineq": 1e-06,
        "nlp_solver_tol_min_step_norm": 0.0,
        "nlp_solver_tol_stat": 1e-06,
        "nlp_solver_type": "SQP",
        "nlp_solver_warm_start_first_qp": false,
        "num_threads_in_batch_solve": 1,
        "print_level": 1,
        "qp_solver": "PARTIAL_CONDENSING_OSQP",
        "qp_solver_cond_N": 100,
        "qp_solver_cond_block_size": null,
        "qp_solver_cond_ric_alg": 1,
        "qp_solver_iter_max": 500,
        "qp_solver_mu0": 0.0,
        "qp_solver_ric_alg": 1,
        "qp_solver_tol_comp": 0.001,
        "qp_solver_tol_eq": 0.001,
        "qp_solver_tol_ineq": 0.001,
        "qp_solver_tol_stat": 0.001,
        "qp_solver_warm_start": 0,
        "reg_epsilon": 0.0001,
        "regularize_method": "NO_REGULARIZE",
        "rti_log_only_available_residuals": 0,
        "rti_log_residuals": 0,
        "shooting_nodes": [
            0.0,
            0.0010000000000000007,
            0.0020000000000000013,
            0.003000000000000002,
            0.004000000000000003,
            0.005000000000000004,
            0.0060000000000000045,
            0.007000000000000005,
            0.008000000000000005,
            0.009000000000000006,
            0.010000000000000007,
            0.011000000000000008,
            0.012000000000000009,
            0.01300000000000001,
            0.01400000000000001,
            0.015000000000000012,
            0.01600000000000001,
            0.01700000000000001,
            0.018000000000000013,
            0.019000000000000013,
            0.020000000000000014,
            0.021000000000000015,
            0.022000000000000016,
            0.023000000000000017,
            0.024000000000000018,
            0.02500000000000002,
            0.02600000000000002,
            0.02700000000000002,
            0.02800000000000002,
            0.029000000000000022,
            0.030000000000000023,
            0.031000000000000024,
            0.03200000000000002,
            0.03300000000000002,
            0.03400000000000002,
            0.035000000000000024,
            0.036000000000000025,
            0.037000000000000026,
            0.03800000000000003,
            0.03900000000000003,
            0.04000000000000003,
            0.04100000000000003,
            0.04200000000000003,
            0.04300000000000003,
            0.04400000000000003,
            0.04500000000000003,
            0.046000000000000034,
            0.047000000000000035,
            0.048000000000000036,
            0.04900000000000004,
            0.05000000000000004,
            0.05100000000000004,
            0.05200000000000004,
            0.05300000000000004,
            0.05400000000000004,
            0.05500000000000004,
            0.05600000000000004,
            0.057000000000000044,
            0.058000000000000045,
            0.059000000000000045,
            0.060000000000000046,
            0.06100000000000005,
            0.06200000000000005,
            0.06300000000000004,
            0.06400000000000004,
            0.06500000000000004,
            0.06600000000000004,
            0.06700000000000005,
            0.06800000000000005,
            0.06900000000000005,
            0.07000000000000005,
            0.07100000000000005,
            0.07200000000000005,
            0.07300000000000005,
            0.07400000000000005,
            0.07500000000000005,
            0.07600000000000005,
            0.07700000000000005,
            0.07800000000000006,
            0.07900000000000006,
            0.08000000000000006,
            0.08100000000000006,
            0.08200000000000006,
            0.08300000000000006,
            0.08400000000000006,
            0.08500000000000006,
            0.08600000000000006,
            0.08700000000000006,
            0.08800000000000006,
            0.08900000000000007,
            0.09000000000000007,
            0.09100000000000007,
            0.09200000000000007,
            0.09300000000000007,
            0.09400000000000007,
            0.09500000000000007,
            0.09600000000000007,
            0.09700000000000007,
            0.09800000000000007,
            0.09900000000000007,
            0.10000000000000007
        ],
        "sim_method_jac_reuse": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4
        ],
        "sim_method_num_steps": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "store_iterates": false,
        "tf": 0.10000000000000007,
        "time_steps": [
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007,
            0.0010000000000000007
        ],
        "timeout_heuristic": "LAST",
        "timeout_max_time": 0.0,
        "with_adaptive_levenberg_marquardt": false,
        "with_solution_sens_wrt_params": false,
        "with_value_sens_wrt_params": false
    },
    "zoro_description": null
}